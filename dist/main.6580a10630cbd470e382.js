(()=>{"use strict";var e,t={521:(e,t,n)=>{var o=n(370);const r=document.getElementById("datecalc__result"),s=document.getElementById("demo"),l=({hours:e,minutes:t,seconds:n})=>{s.innerHTML=`<span> \n     ${e<10?"0"+e:e} : ${t<10?"0"+t:t} : ${n<10?"0"+n:n}\n     </span>`},c=e=>{s.innerHTML=e};function a(e){var t,n,o;for(n=document.getElementsByClassName("menu_content"),t=0;t<n.length;t++)n[t].style.display="none";for(o=document.getElementsByClassName("menu_links"),t=0;t<o.length;t++)o[t].className=o[t].className.replace(" active","");const r=e.currentTarget.getAttribute("for");document.getElementById(r).style.display="block",e.currentTarget.className+=" active"}const u=()=>{document.getElementById("stop").style.display="none",document.getElementById("reset").style.display="none",document.getElementById("start").style.display="block"};var d=n(766);const m=n.p+"./media/eralash.mp3";function i(e){return{hours:Math.floor(e/3600),minutes:Math.floor(e%3600/60),seconds:Math.floor(e%3600%60)}}function y({hours:e,minutes:t,seconds:n}){document.getElementById("hours").value=e,document.getElementById("minutes").value=t,document.getElementById("seconds").value=n}const f=document.getElementById("hours"),p=document.getElementById("minutes"),g=document.getElementById("seconds"),v=document.getElementById("datecalc"),h=(document.getElementById("timer"),document.querySelectorAll("#menu button"));window.onload=()=>{h.forEach((e=>{e.getAttribute("for"),e.onclick=a})),(()=>{for(let e=0;e<24;e++)f[e]=new Option(`${e}`,e);for(let e=0;e<60;e++)p[e]=new Option(`${e}`,e);for(let e=0;e<60;e++)g[e]=new Option(`${e}`,e)})(),document.querySelector("button[for=datecalc]").click()},v.onsubmit=e=>{e.preventDefault();const t=new FormData(e.target),n=t.get("firstDate"),s=t.get("secondDate");n&&s?(({years:e,months:t,days:n})=>{r.innerHTML=`<span> Осталось:<br>\n    Лет: ${e?+e:"0 "}\n    Месяцев: ${t?+t:"0 "}\n    Дней: ${n?+n:"0 "}\n    </span>`})(function(e,t){let n=o.ou.fromISO(e),r=o.ou.fromISO(t);return n>r&&(r=[n,n=r][0]),r.diff(n,["years","months","days"]).toObject()}(n,s)):("Для расчета промежутка необходимо заполнить оба поля",r.innerHTML='<span style="color: red;">\n                        Для расчета промежутка необходимо заполнить оба поля\n                        </span>\n                    ')},document.getElementById("start").onclick=e=>{e.preventDefault(),function(e,t,n){let o=3600*+e+60*+t+ +n;if(0!==o){document.getElementById("stop").style.display="block",document.getElementById("reset").style.display="block",document.getElementById("start").style.display="none",l({hours:+e,minutes:+t,seconds:+n});var r=setInterval((function(){--o,l(i(o)),0===o&&(clearInterval(r),new d.Howl({src:[m]}).play(),c("Время вышло!"),u())}),1e3);document.getElementById("stop").onclick=e=>{e.preventDefault(),r&&clearInterval(r),y(i(o)),u()},document.getElementById("reset").onclick=e=>{e.preventDefault(),r&&clearInterval(r),o=0,y({hours:0,minutes:0,seconds:0}),c(""),u()}}else c('<span style="color: red;">Установите время!</span>')}(document.getElementById("hours").value,document.getElementById("minutes").value,document.getElementById("seconds").value),y({hours:0,minutes:0,seconds:0})}}},n={};function o(e){var r=n[e];if(void 0!==r)return r.exports;var s=n[e]={exports:{}};return t[e](s,s.exports,o),s.exports}o.m=t,e=[],o.O=(t,n,r,s)=>{if(!n){var l=1/0;for(d=0;d<e.length;d++){for(var[n,r,s]=e[d],c=!0,a=0;a<n.length;a++)(!1&s||l>=s)&&Object.keys(o.O).every((e=>o.O[e](n[a])))?n.splice(a--,1):(c=!1,s<l&&(l=s));if(c){e.splice(d--,1);var u=r();void 0!==u&&(t=u)}}return t}s=s||0;for(var d=e.length;d>0&&e[d-1][2]>s;d--)e[d]=e[d-1];e[d]=[n,r,s]},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.p="",(()=>{var e={179:0};o.O.j=t=>0===e[t];var t=(t,n)=>{var r,s,[l,c,a]=n,u=0;if(l.some((t=>0!==e[t]))){for(r in c)o.o(c,r)&&(o.m[r]=c[r]);if(a)var d=a(o)}for(t&&t(n);u<l.length;u++)s=l[u],o.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return o.O(d)},n=self.webpackChunkwebproject=self.webpackChunkwebproject||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var r=o.O(void 0,[766,786,362,165,370],(()=>o(521)));r=o.O(r)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,